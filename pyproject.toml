[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-app"
version = "2.0.0"  # keep explicit version; setuptools-scm is available if you switch to dynamic later
description = "Unified AI interface with CLI bridge and GTK4 chat UI"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "Jacques", email = "your.email@example.com" }
]
dependencies = [
  "requests>=2.32.0",
  "beautifulsoup4>=4.14.0",
  "tiktoken>=0.12.0",
  "typer>=0.19.0",
  "rich>=14.0.0",
  "markdown-it-py>=4.0.0",
  "markdownify>=1.2.0",
  "playwright>=1.40.0",
  "fastapi>=0.104.0",
  "pydantic>=2.0.0",
  "tomli>=2.0.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0",
]

# CLI entry points â€” aligned to your src/ tree
[project.scripts]
ai-cli-bridge = "cli_bridge.cli:main"
ai-chat-ui    = "chat_ui.main:main"
ai-daemon     = "daemon.main:main"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

# Limit discovery to your actual packages (avoids accidental picks)
[tool.setuptools.packages.find]
where = ["src"]
include = ["cli_bridge*", "chat_ui*", "daemon*", "common*", "tools*"]

# Ship desktop files/icons inside the wheel
[tool.setuptools.package-data]
"*" = [
  "assets/desktop/*.desktop",
  "assets/desktop/*.svg",
]

# (Optional, non-CI) sensible defaults for pytest discovery if you use it locally
[tool.pytest.ini_options]
addopts = "-q --tb=short"
testpaths = ["tests"]

